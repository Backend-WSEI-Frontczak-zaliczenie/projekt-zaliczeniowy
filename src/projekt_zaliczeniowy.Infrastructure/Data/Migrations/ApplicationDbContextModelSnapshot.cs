// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projekt_zaliczeniowy.Infrastructure.Data;

#nullable disable

namespace projekt_zaliczeniowy.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AspNetUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetUserRoles_RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.AspNetRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedName" }, "RoleNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedName] IS NOT NULL)");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.AspNetRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetRoleClaims_RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.AspNetUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedEmail" }, "EmailIndex");

                    b.HasIndex(new[] { "NormalizedUserName" }, "UserNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.AspNetUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserClaims_UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.AspNetUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserLogins_UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.AspNetUserToken", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.City", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__cities__3213E83F62CBBC7D");

                    b.ToTable("cities", (string)null);
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.Comment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Comment1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment");

                    b.Property<int?>("Restaurant")
                        .HasColumnType("int")
                        .HasColumnName("restaurant");

                    b.HasKey("Id")
                        .HasName("PK__comments__3213E83F9686E331");

                    b.HasIndex("Restaurant");

                    b.ToTable("comments", (string)null);
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.Region", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__regions__3213E83F5995FCC2");

                    b.ToTable("regions", (string)null);
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<string>("Guest")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("guest");

                    b.Property<int?>("Restaurant")
                        .HasColumnType("int")
                        .HasColumnName("restaurant");

                    b.HasKey("Id")
                        .HasName("PK__reservat__3213E83F42A20B71");

                    b.HasIndex("Guest");

                    b.HasIndex("Restaurant");

                    b.ToTable("reservations", (string)null);
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool>("AdultOnly")
                        .HasColumnType("bit")
                        .HasColumnName("adult_only");

                    b.Property<int?>("City")
                        .HasColumnType("int")
                        .HasColumnName("city");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(3, 2)")
                        .HasColumnName("rating");

                    b.Property<int?>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("PK__restaura__3213E83FCEB872CE");

                    b.HasIndex("City");

                    b.HasIndex("Type");

                    b.ToTable("restaurants", (string)null);
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.RestaurantsType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("Region")
                        .HasColumnType("int")
                        .HasColumnName("region");

                    b.HasKey("Id")
                        .HasName("PK__restaura__3213E83F87BAC261");

                    b.HasIndex("Region");

                    b.ToTable("restaurants_types", (string)null);
                });

            modelBuilder.Entity("AspNetUserRole", b =>
                {
                    b.HasOne("projekt_zaliczeniowy.Infrastructure.Data.AspNetRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projekt_zaliczeniowy.Infrastructure.Data.AspNetUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.AspNetRoleClaim", b =>
                {
                    b.HasOne("projekt_zaliczeniowy.Infrastructure.Data.AspNetRole", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.AspNetUserClaim", b =>
                {
                    b.HasOne("projekt_zaliczeniowy.Infrastructure.Data.AspNetUser", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.AspNetUserLogin", b =>
                {
                    b.HasOne("projekt_zaliczeniowy.Infrastructure.Data.AspNetUser", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.AspNetUserToken", b =>
                {
                    b.HasOne("projekt_zaliczeniowy.Infrastructure.Data.AspNetUser", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.Comment", b =>
                {
                    b.HasOne("projekt_zaliczeniowy.Infrastructure.Data.Restaurant", "RestaurantNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("Restaurant")
                        .HasConstraintName("FK__comments__restau__4316F928");

                    b.Navigation("RestaurantNavigation");
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.Reservation", b =>
                {
                    b.HasOne("projekt_zaliczeniowy.Infrastructure.Data.AspNetUser", "GuestNavigation")
                        .WithMany("Reservations")
                        .HasForeignKey("Guest")
                        .HasConstraintName("FK__reservati__guest__46E78A0C");

                    b.HasOne("projekt_zaliczeniowy.Infrastructure.Data.Restaurant", "RestaurantNavigation")
                        .WithMany("Reservations")
                        .HasForeignKey("Restaurant")
                        .HasConstraintName("FK__reservati__resta__45F365D3");

                    b.Navigation("GuestNavigation");

                    b.Navigation("RestaurantNavigation");
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.Restaurant", b =>
                {
                    b.HasOne("projekt_zaliczeniowy.Infrastructure.Data.City", "CityNavigation")
                        .WithMany("Restaurants")
                        .HasForeignKey("City")
                        .HasConstraintName("FK__restaurant__city__403A8C7D");

                    b.HasOne("projekt_zaliczeniowy.Infrastructure.Data.RestaurantsType", "TypeNavigation")
                        .WithMany("Restaurants")
                        .HasForeignKey("Type")
                        .HasConstraintName("FK__restaurant__type__3F466844");

                    b.Navigation("CityNavigation");

                    b.Navigation("TypeNavigation");
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.RestaurantsType", b =>
                {
                    b.HasOne("projekt_zaliczeniowy.Infrastructure.Data.Region", "RegionNavigation")
                        .WithMany("RestaurantsTypes")
                        .HasForeignKey("Region")
                        .HasConstraintName("FK__restauran__regio__3C69FB99");

                    b.Navigation("RegionNavigation");
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.AspNetRole", b =>
                {
                    b.Navigation("AspNetRoleClaims");
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.AspNetUser", b =>
                {
                    b.Navigation("AspNetUserClaims");

                    b.Navigation("AspNetUserLogins");

                    b.Navigation("AspNetUserTokens");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.City", b =>
                {
                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.Region", b =>
                {
                    b.Navigation("RestaurantsTypes");
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.Restaurant", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("projekt_zaliczeniowy.Infrastructure.Data.RestaurantsType", b =>
                {
                    b.Navigation("Restaurants");
                });
#pragma warning restore 612, 618
        }
    }
}
